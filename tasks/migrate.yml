---
# tasks/migrate.yml - Migration tasks

- name: Verify source server exists
  uri:
    url: "{{ cloudflare_api_endpoint }}/accounts/{{ cloudflare_account_id }}/storage/kv/namespaces/{{ cloudflare_api_kv_namespace }}/values/{{ source_hostname }}"
    method: GET
    headers:
      X-Auth-Email: "{{ cloudflare_email }}"
      X-Auth-Key: "{{ cloudflare_api_token }}"
    status_code: 200
  delegate_to: localhost
  register: source_server

- name: Get source server Prometheus endpoint
  uri:
    url: "{{ cloudflare_api_endpoint }}/accounts/{{ cloudflare_account_id }}/storage/kv/namespaces/{{ cloudflare_prom_kv_namespace }}/values/{{ source_hostname }}"
    method: GET
    headers:
      X-Auth-Email: "{{ cloudflare_email }}"
      X-Auth-Key: "{{ cloudflare_api_token }}"
    status_code: 200
  delegate_to: localhost
  register: source_prom

- name: Install Outline on new server
  include_tasks: outline.yml

- name: Stop Outline containers on new server
  docker_container:
    name: "{{ item }}"
    state: stopped
  loop:
    - watchtower
    - shadowbox
  become: yes
  when: outline_install_success | default(false) | bool

- name: Create temporary directory on control node
  file:
    path: "/tmp/outline-migration-{{ source_hostname }}"
    state: directory
    mode: '0755'
  delegate_to: localhost

- name: Fetch Outline directory from source server
  synchronize:
    src: /opt/outline/
    dest: "/tmp/outline-migration-{{ source_hostname }}/"
    mode: pull
  delegate_to: localhost

- name: Push Outline directory to destination server
  synchronize:
    src: "/tmp/outline-migration-{{ source_hostname }}/"
    dest: /opt/outline/
    mode: push
    delete: yes
  delegate_to: localhost

- name: Clean up temporary directory on control node
  file:
    path: "/tmp/outline-migration-{{ source_hostname }}"
    state: absent
  delegate_to: localhost

- name: Start Outline containers on new server
  docker_container:
    name: "{{ item }}"
    state: started
  loop:
    - shadowbox
    - watchtower
  become: yes

- name: Update API KV store with new hostname
  uri:
    url: "{{ cloudflare_api_endpoint }}/accounts/{{ cloudflare_account_id }}/storage/kv/namespaces/{{ cloudflare_api_kv_namespace }}/values/{{ destination_hostname }}"
    method: PUT
    headers:
      X-Auth-Email: "{{ cloudflare_email }}"
      X-Auth-Key: "{{ cloudflare_api_token }}"
    body: "{{ source_server.content | regex_replace(source_hostname, destination_hostname) }}"
    status_code: 200
  delegate_to: localhost
  when: source_server.status == 200

- name: Update Prometheus KV store with new hostname
  uri:
    url: "{{ cloudflare_api_endpoint }}/accounts/{{ cloudflare_account_id }}/storage/kv/namespaces/{{ cloudflare_prom_kv_namespace }}/values/{{ destination_hostname }}"
    method: PUT
    headers:
      X-Auth-Email: "{{ cloudflare_email }}"
      X-Auth-Key: "{{ cloudflare_api_token }}"
    body: "{{ source_prom.content | regex_replace(source_hostname, destination_hostname) }}"
    status_code: 200
  delegate_to: localhost
  when: source_prom.status == 200

- name: Delete source server API KV entry
  uri:
    url: "{{ cloudflare_api_endpoint }}/accounts/{{ cloudflare_account_id }}/storage/kv/namespaces/{{ cloudflare_api_kv_namespace }}/values/{{ source_hostname }}"
    method: DELETE
    headers:
      X-Auth-Email: "{{ cloudflare_email }}"
      X-Auth-Key: "{{ cloudflare_api_token }}"
    status_code: 200
  delegate_to: localhost
  when: migrate_delete_source | default(false) | bool

- name: Delete source server Prometheus KV entry
  uri:
    url: "{{ cloudflare_api_endpoint }}/accounts/{{ cloudflare_account_id }}/storage/kv/namespaces/{{ cloudflare_prom_kv_namespace }}/values/{{ source_hostname }}"
    method: DELETE
    headers:
      X-Auth-Email: "{{ cloudflare_email }}"
      X-Auth-Key: "{{ cloudflare_api_token }}"
    status_code: 200
  delegate_to: localhost
  when: migrate_delete_source | default(false) | bool
