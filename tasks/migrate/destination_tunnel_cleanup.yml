# tasks/migrate/destination_tunnel_cleanup.yml - Clean up existing tunnel for destination hostname

- name: Get existing tunnels
  uri:
    url: "{{ cloudflare_api_endpoint }}/accounts/{{ cloudflare_account_id }}/cfd_tunnel"
    method: GET
    headers:
      X-Auth-Email: "{{ cloudflare_email }}"
      X-Auth-Key: "{{ cloudflare_api_token }}"
    status_code: 200
  delegate_to: localhost
  register: existing_tunnels
  when: 
    - inventory_hostname == destination_hostname
  run_once: true

- name: Find tunnel ID for destination hostname
  set_fact:
    destination_tunnel_id: "{{ item.id }}"
  loop: "{{ existing_tunnels.json.result }}"
  when: 
    - inventory_hostname == destination_hostname
    - item.name == destination_kv_hostname + (hostname_extension | default(''))
  run_once: true

- name: Get existing DNS records for tunnel cleanup
  uri:
    url: "{{ cloudflare_api_endpoint }}/zones/{{ cloudflare_zone_id }}/dns_records"
    method: GET
    headers:
      Content-Type: "application/json"
      X-Auth-Email: "{{ cloudflare_email }}"
      X-Auth-Key: "{{ cloudflare_api_token }}"
    status_code: 200
  delegate_to: localhost
  register: tunnel_dns_records
  when: 
    - inventory_hostname == destination_hostname
    - destination_tunnel_id is defined
  run_once: true

- name: Delete tunnel DNS CNAME records for API domain
  uri:
    url: "{{ cloudflare_api_endpoint }}/zones/{{ cloudflare_zone_id }}/dns_records/{{ item.id }}"
    method: DELETE
    headers:
      Content-Type: "application/json"
      X-Auth-Email: "{{ cloudflare_email }}"
      X-Auth-Key: "{{ cloudflare_api_token }}"
    status_code: 200
  delegate_to: localhost
  loop: "{{ tunnel_dns_records.json.result }}"
  when: 
    - inventory_hostname == destination_hostname
    - destination_tunnel_id is defined
    - item.type == 'CNAME'
    - (item.name == destination_kv_hostname + '-api.' + api_domain or item.name == destination_kv_hostname + '-prom.' + prom_domain)
  run_once: true

- name: Delete tunnel DNS CNAME records for additional domains
  uri:
    url: "{{ cloudflare_api_endpoint }}/zones/{{ item[0].zone_id | default(cloudflare_zone_id) }}/dns_records/{{ item[1].id }}"
    method: DELETE
    headers:
      Content-Type: "application/json"
      X-Auth-Email: "{{ cloudflare_email }}"
      X-Auth-Key: "{{ cloudflare_api_token }}"
    status_code: 200
  delegate_to: localhost
  with_nested:
    - "{{ additional_domains | default([]) }}"
    - "{{ tunnel_dns_records.json.result }}"
  when: 
    - inventory_hostname == destination_hostname
    - destination_tunnel_id is defined
    - item[1].type == 'CNAME'
    - item[1].name == destination_kv_hostname + '-api.' + item[0].domain
  run_once: true

- name: Delete existing tunnel
  uri:
    url: "{{ cloudflare_api_endpoint }}/accounts/{{ cloudflare_account_id }}/cfd_tunnel/{{ destination_tunnel_id }}"
    method: DELETE
    headers:
      X-Auth-Email: "{{ cloudflare_email }}"
      X-Auth-Key: "{{ cloudflare_api_token }}"
    status_code: 200
  delegate_to: localhost
  when: 
    - inventory_hostname == destination_hostname
    - destination_tunnel_id is defined
  run_once: true
